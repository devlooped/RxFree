<Project>

  <Target Name="Version" DependsOnTargets="SetVersion">
    <Message Importance="high" Text="##vso[build.updatebuildnumber]$(InformationalVersion)"/>
    <Message Importance="high" Text="PackageVersion=$(PackageVersion)
AssemblyVersion=$(AssemblyVersion)
InformationalVersion=$(InformationalVersion)" />
  </Target>
  
  <Target Name="SetVersion" BeforeTargets="PrepareForBuild;GetAssemblyVersion;GetPackageVersion;Pack"
					DependsOnTargets="GitVersion" Returns="$(Version)"
					Condition="'$(GitInfoImported)' == 'true' And '$(ExcludeRestorePackageImports)' != 'true'">

    <Error Condition="$(CI) And '$(GitSemVerSource)' == 'Default'" Text="Could not determine Git-based version for CI build!" />

    <PropertyGroup>
      <_GitBranchIndexOfSlash>$(GitBranch.IndexOf('/'))</_GitBranchIndexOfSlash>
      <GitBranch Condition="'$(_GitBranchIndexOfSlash)' != '-1'">$(GitBranch.Substring($([MSBuild]::Add($(_GitBranchIndexOfSlash), 1))))</GitBranch>

      <GitSemVerLabel Condition="'$(GitSemVerLabel)' == '' And '$(GitBranch)' != 'master'">$(GitBranch)</GitSemVerLabel>
      <GitSemVerLabel Condition="'$(GitSemVerLabel)' != ''">$(GitSemVerLabel).$(GitSemVerPatch)</GitSemVerLabel>
      <GitSemVerDashLabel Condition="'$(GitSemVerLabel)' != ''">-$(GitSemVerLabel)</GitSemVerDashLabel>
    </PropertyGroup>

    <ItemGroup>
      <VersionMetadata Condition="$(CI) and '$(BUILD_REASON)' == 'PullRequest'"
											 Include="pr.$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)"/>
      <VersionMetadata Include="sha.$(GitCommit)" Condition="'$(GitCommit)' != ''"/>
      <VersionMetadata Condition="$(CI)"
											 Include="azdo.$(BUILD_BUILDID)"/>
    </ItemGroup>

    <PropertyGroup>
      <VersionPrefix Condition="'$(GitSemVerLabel)' == ''">$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)</VersionPrefix>
      <VersionPrefix Condition="'$(GitSemVerLabel)' != ''">$(GitSemVerMajor).$(GitSemVerMinor).$(GitBaseVersionPatch)</VersionPrefix>
      <VersionSuffix>$(GitSemVerLabel)+@(VersionMetadata -> '%(Identity)', '-')</VersionSuffix>

      <AssemblyVersion>$(VersionPrefix)</AssemblyVersion>
      <FileVersion>$(AssemblyVersion)</FileVersion>
      <InformationalVersion Condition="'$(GitSemVerLabel)' != ''">$(VersionPrefix)-$(VersionSuffix)</InformationalVersion>
      <InformationalVersion Condition="'$(GitSemVerLabel)' == ''">$(VersionPrefix)$(VersionSuffix)</InformationalVersion>
      <PackageVersion>$(InformationalVersion)</PackageVersion>
    </PropertyGroup>

  </Target>
  
  <Target Name="AddVersionMetadata" DependsOnTargets="GetAssemblyVersion" AfterTargets="GetAssemblyAttributes">
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>AssemblyVersion</_Parameter1>
        <_Parameter2>$(AssemblyVersion)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>FileVersion</_Parameter1>
        <_Parameter2>$(FileVersion)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>InformationalVersion</_Parameter1>
        <_Parameter2>$(InformationalVersion)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
  
  <!-- Delete when https://github.com/dotnet/sdk/pull/3439 ships -->
  <Target Name="GetAdditionalAssemblyAttributes" AfterTargets="GetAssemblyAttributes">
    <ItemGroup>
      <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo" Condition="%(InternalsVisibleTo.Identity) != ''">
        <_Parameter1>%(InternalsVisibleTo.Identity)</_Parameter1>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata" Condition="%(AssemblyMetadata.Identity) != ''">
        <_Parameter1>%(AssemblyMetadata.Identity)</_Parameter1>
        <_Parameter2>%(AssemblyMetadata.Value)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
  
</Project>
